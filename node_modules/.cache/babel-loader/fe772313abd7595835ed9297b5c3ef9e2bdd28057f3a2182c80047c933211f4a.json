{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\William\\\\Programs\\\\WRamsay_Website_Portfoloio\\\\wramsay\\\\src\\\\project_tab\\\\project_tab.js\";\nimport styles from './project_tab.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction project(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_small\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TopCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\\\\images\\\\machine-learning.jpg\",\n          alt: \"uh oh!\",\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Project_title\",\n          children: \"Reddit Sentiment analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: \"2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"\\u2022 Worked with a team in Python to create a recurrent neural network (RNN) that judges the sentiment of text. \\u2022 The program would scrape subreddits and then, predict the sentiment of the comments. \\u2022 The program would then output the sentiment of each comment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project_extend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\nexport default project;","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","Fragment","_Fragment","project","props","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/William/Programs/WRamsay_Website_Portfoloio/wramsay/src/project_tab/project_tab.js"],"sourcesContent":["\r\nimport styles from './project_tab.css';\r\n\r\nfunction project(props) {\r\n    return(\r\n        <>\r\n            \r\n            \r\n            <div className='project_small'>\r\n                <div className = \"TopCard\">\r\n                    <img src = \"\\images\\machine-learning.jpg\" alt = \"uh oh!\" className = \"icon\"></img>\r\n                    <div className=\"Project_title\">Reddit Sentiment analysis</div>\r\n                    <div className=\"date\">2023</div>\r\n                </div>\r\n                <div className=\"description\">• Worked with a team in Python to create a\r\nrecurrent neural network (RNN) that\r\njudges the sentiment of text.\r\n• The program would scrape subreddits and\r\nthen, predict the sentiment of the\r\ncomments.\r\n• The program would then output the\r\nsentiment of each comment.</div>\r\n            </div>\r\n\r\n            <div className='project_extend'> \r\n            \r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default project"],"mappings":";AACA,OAAOA,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,OAAOA,CAACC,KAAK,EAAE;EACpB,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBAGIL,OAAA;MAAKM,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BL,OAAA;QAAKM,SAAS,EAAG,SAAS;QAAAD,QAAA,gBACtBL,OAAA;UAAKO,GAAG,EAAG,gCAA8B;UAACC,GAAG,EAAG,QAAQ;UAACF,SAAS,EAAG;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClFZ,OAAA;UAAKM,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAC;QAAyB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9DZ,OAAA;UAAKM,SAAS,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACNZ,OAAA;QAAKM,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAOnB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eAENZ,OAAA;MAAKM,SAAS,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B,CAAC;EAAA,eACR,CAAC;AAGX;AAGA,eAAeT,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
[{"C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\index.js":"1","C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\App.js":"2","C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\navbar\\navbar.js":"3","C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\project_tab\\project_tab.js":"4","C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\web_footer\\web_footer.js":"5","C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\introduction\\introduction.js":"6","C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\itemcard\\itemcard.js":"7"},{"size":2390,"mtime":1700435581916,"results":"8","hashOfConfig":"9"},{"size":182,"mtime":1699252243062,"results":"10","hashOfConfig":"9"},{"size":887,"mtime":1700435803434,"results":"11","hashOfConfig":"9"},{"size":960,"mtime":1699849001460,"results":"12","hashOfConfig":"9"},{"size":703,"mtime":1700100629528,"results":"13","hashOfConfig":"9"},{"size":331,"mtime":1700094458675,"results":"14","hashOfConfig":"9"},{"size":790,"mtime":1700265015110,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"1umfcw7",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},"C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\index.js",["42"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport WebFooter from './web_footer/web_footer';\nimport Navbar from './navbar/navbar'\nimport Intro from './introduction/introduction';\nimport ItemCard from './itemcard/itemcard';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Navbar />\n    <Intro />\n    \n    <span className='section_card' id=\"About_Me\">About Me</span>\n\n    <div id=\"skills\">\n      <h3 class=\"subheader\">Skills</h3>\n      <p class=\"subtext\">Languages: Java, Python, SQL, C, C#, HTML, CSS </p>\n      <p class=\"subtext\">Tools and Environments: Visual Studio Code, Git, IntelliJ IDEA</p>\n    </div>\n    \n    \n    <ItemCard \n    src='.\\images\\education.jpg' \n    title='Bachelors of Science' \n    desc='Completed the degree with a major in computer science at University of Northern British Columbia in 2023.' \n    flip='' />\n\n\n\n    <span className='section_card' id=\"Projects\">Projects</span>\n\n    <ItemCard  src='.\\images\\discord_bot.jpg' \n    title='Discord Text / Image Generator' \n    desc='In Python using various lirbraies and models made a discord bot that henerates images/text. \n    The bot rememebers previous text and will try to stay on topic. It can generate images directly \n    from the users prompt or from the user asking to it to take a picture.' \n    flip='flip' />\n\n\n    <ItemCard src='.\\images\\code.jpg' title='Frequent Pattern Growth Algorithm' desc='\n    Implemented the data mining algorithm\n    frequent pattern growth in Java. \n    The Algorithm uses trees and the divide\n    and conquer approach to find frequent\n    patterns in the provided data set and\n    minimum support. \n    Outputs the frequent patterns and the\n    time it took to produce the result.' flip='' />\n\n\n    <ItemCard \n    src= '.\\images\\machine-learning.jpg' \n    title=\"Reddit Sentiment Analysis RNN\" \n    desc=\"Worked with a team in Python to create a\n    recurrent neural network (RNN) that\n    judges the sentiment of text.\n    Would scrape subreddits and\n    then, predict the sentiment of the\n    comments.\n    It then would then output the\n    sentiment of each comment.\n    \"\n    flip=\"flip\"/>\n\n    {/* <ItemCard src='' title='' desc='' flip='' /> */}\n    <WebFooter />\n    \n\n    \n    \n  </React.StrictMode>\n);\n\n\n\n\n{/*\n\n  ItemCard src='' title='' desc='' flip='' />\n\n*/}","C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\App.js",[],[],"C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\navbar\\navbar.js",[],[],"C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\project_tab\\project_tab.js",["43"],[],"\r\nimport styles from './project_tab.css';\r\n\r\nfunction project(props) {\r\n    return(\r\n        <>\r\n            \r\n            \r\n            <div className='project_small'>\r\n                <div className = \"TopCard\">\r\n                    <img src = \"\\images\\machine-learning.jpg\" alt = \"uh oh!\" className = \"icon\"></img>\r\n                    <div className=\"Project_title\">Reddit Sentiment analysis</div>\r\n                    <div className=\"date\">2023</div>\r\n                </div>\r\n                <div className=\"description\">• Worked with a team in Python to create a\r\nrecurrent neural network (RNN) that\r\njudges the sentiment of text.\r\n• The program would scrape subreddits and\r\nthen, predict the sentiment of the\r\ncomments.\r\n• The program would then output the\r\nsentiment of each comment.</div>\r\n            </div>\r\n\r\n            <div className='project_extend'> \r\n            \r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default project",["44"],"C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\web_footer\\web_footer.js",[],[],["45"],"C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\introduction\\introduction.js",[],[],"C:\\Users\\William\\Programs\\WRamsay_Website_Portfoloio\\wramsay\\src\\itemcard\\itemcard.js",["46"],[],"import './itemcard.css';\r\n\r\nconst item = (param) => {\r\n    return(\r\n        <>\r\n            <div id=\"card\" className={param.flip}>\r\n                {/* {param.link} */}\r\n                    {/* <a href=\"https://github.com/Virulentis\" className={param.isLink}> */}\r\n                    \r\n                    <img src = {param.src} id=\"profile_photo\"></img>\r\n\r\n\r\n\r\n                        {/* <span id=\"project_link\">Github</span> */}\r\n\r\n\r\n                   {/* </a> */}\r\n\r\n                \r\n                \r\n                \r\n                <div id=\"explanation\">\r\n                    <h1 id=\"title\">{param.title}</h1>\r\n                    <div id=\"desc\">{param.desc}</div>\r\n                </div>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default item\r\n\r\n\r\n",{"ruleId":"47","severity":1,"message":"48","line":80,"column":1,"nodeType":"49","messageId":"50","endLine":84,"endColumn":4},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"55","replacedBy":"56"},{"ruleId":"55","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":21,"nodeType":"60","endLine":10,"endColumn":63},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","no-new-object",["61"],["61"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-object-constructor"]